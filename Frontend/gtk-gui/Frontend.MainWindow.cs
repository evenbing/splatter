// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Frontend {
    
    
    public partial class MainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action addAction;
        
        private Gtk.Action refreshAction;
        
        private Gtk.Action deleteAction;
        
        private Gtk.VBox vbox1;
        
        private Gtk.Toolbar toolbar3;
        
        private Gtk.ScrolledWindow GtkScrolledWindow;
        
        private Gtk.TreeView treeview1;
        
        private Gtk.Statusbar statusbar1;
        
        private Gtk.ProgressBar progressbar1;
        
        private Gtk.Label statusLabel;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget Frontend.MainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.addAction = new Gtk.Action("addAction", Mono.Unix.Catalog.GetString("Add Query"), Mono.Unix.Catalog.GetString("Add Queries"), "gtk-add");
            this.addAction.HideIfEmpty = false;
            this.addAction.IsImportant = true;
            this.addAction.ShortLabel = Mono.Unix.Catalog.GetString("Add Query");
            w1.Add(this.addAction, "<Control><Alt><Meta>n");
            this.refreshAction = new Gtk.Action("refreshAction", Mono.Unix.Catalog.GetString("Refresh Queries"), Mono.Unix.Catalog.GetString("Refresh Queries"), "gtk-refresh");
            this.refreshAction.HideIfEmpty = false;
            this.refreshAction.IsImportant = true;
            this.refreshAction.ShortLabel = Mono.Unix.Catalog.GetString("Refresh Queries");
            w1.Add(this.refreshAction, null);
            this.deleteAction = new Gtk.Action("deleteAction", Mono.Unix.Catalog.GetString("Delete Query"), Mono.Unix.Catalog.GetString("Delete Query"), "gtk-delete");
            this.deleteAction.HideIfEmpty = false;
            this.deleteAction.IsImportant = true;
            this.deleteAction.ShortLabel = Mono.Unix.Catalog.GetString("Delete Query");
            w1.Add(this.deleteAction, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.Name = "Frontend.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("Splatter - Query View");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            // Container child Frontend.MainWindow.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><toolbar name='toolbar3'><toolitem name='addAction' action='addAction'/><toolitem name='refreshAction' action='refreshAction'/><toolitem name='deleteAction' action='deleteAction'/></toolbar></ui>");
            this.toolbar3 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar3")));
            this.toolbar3.Name = "toolbar3";
            this.toolbar3.ShowArrow = false;
            this.toolbar3.IconSize = ((Gtk.IconSize)(3));
            this.vbox1.Add(this.toolbar3);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar3]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.GtkScrolledWindow = new Gtk.ScrolledWindow();
            this.GtkScrolledWindow.Name = "GtkScrolledWindow";
            this.GtkScrolledWindow.ShadowType = ((Gtk.ShadowType)(1));
            // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
            this.treeview1 = new Gtk.TreeView();
            this.treeview1.CanFocus = true;
            this.treeview1.Name = "treeview1";
            this.GtkScrolledWindow.Add(this.treeview1);
            this.vbox1.Add(this.GtkScrolledWindow);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.GtkScrolledWindow]));
            w4.Position = 1;
            // Container child vbox1.Gtk.Box+BoxChild
            this.statusbar1 = new Gtk.Statusbar();
            this.statusbar1.Name = "statusbar1";
            this.statusbar1.Spacing = 6;
            // Container child statusbar1.Gtk.Box+BoxChild
            this.progressbar1 = new Gtk.ProgressBar();
            this.progressbar1.Name = "progressbar1";
            this.statusbar1.Add(this.progressbar1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.statusbar1[this.progressbar1]));
            w5.Position = 1;
            w5.Expand = false;
            w5.Fill = false;
            // Container child statusbar1.Gtk.Box+BoxChild
            this.statusLabel = new Gtk.Label();
            this.statusLabel.Name = "statusLabel";
            this.statusLabel.Xpad = 13;
            this.statusLabel.Xalign = 0F;
            this.statusLabel.LabelProp = Mono.Unix.Catalog.GetString("label5");
            this.statusbar1.Add(this.statusLabel);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.statusbar1[this.statusLabel]));
            w6.Position = 2;
            this.vbox1.Add(this.statusbar1);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox1[this.statusbar1]));
            w7.Position = 2;
            w7.Expand = false;
            w7.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 751;
            this.DefaultHeight = 428;
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.addAction.Activated += new System.EventHandler(this.AddNewQueryClicked);
            this.refreshAction.Activated += new System.EventHandler(this.RefreshQueriesBuggonClicked);
            this.deleteAction.Activated += new System.EventHandler(this.DeleteQuery);
        }
    }
}
